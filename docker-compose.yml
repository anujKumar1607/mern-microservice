services:
  consul:
      image: consul:1.15
      command: agent -dev -client=0.0.0.0
      ports:
        - "8500:8500"   # Consul UI/API
        - "8600:8600/udp"
      networks:
        - mern-network
  gateway:
    # image: 349263039941.dkr.ecr.us-east-1.amazonaws.com/dukaan/api-gateway:latest
    build:
      context: ./gateway
    container_name: gateway
    ports:
      - "8000:8000"
    depends_on:
      - customer
      - shopping
      - products
    networks:
      - mern-network
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500

  nosql-db:
    image: mvertes/alpine-mongo
    ports:
      - "27018:27017"
    container_name: nosql-db
    volumes:
      - ./db/:/data/db
    networks:
      - mern-network

  # # rabbitmq:
  # #   image: rabbitmq:alpine
  # #   container_name: rabbitmq
  # #   ports:
  # #     - '5672:5672'
  # #   networks:
  # #     - mern-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # AMQP (message broker port)
      - "15672:15672"   # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mern-network

  products:
    # image: 349263039941.dkr.ecr.us-east-1.amazonaws.com/dukaan/products:latest
    build:
      dockerfile: Dockerfile
      context: ./products
    container_name: products
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
    env_file:
      - ./products/.env.dev
    networks:
      - mern-network
    environment:
      - PORT=8002
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
  shopping:
    # image: 349263039941.dkr.ecr.us-east-1.amazonaws.com/dukaan/shopping:latest
    build:
      dockerfile: Dockerfile
      context: ./shopping
    container_name: shopping
    ports:
      - "8003:8003"
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
    env_file:
      - ./shopping/.env.dev
    networks:
      - mern-network
    environment:
      - PORT=8003
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
  customer:
    # image: 349263039941.dkr.ecr.us-east-1.amazonaws.com/dukaan/customer-service:latest
    build:
      dockerfile: Dockerfile
      context: ./customer
    container_name: customer
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
    env_file:
      - ./customer/.env.dev
    networks:
      - mern-network
    environment:
      - PORT=8001
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
  # nginx-proxy:
  #   # image: 349263039941.dkr.ecr.us-east-1.amazonaws.com/dukaan/proxy:latest
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./proxy
  #   depends_on:
  #     - products
  #     - shopping
  #     - customer
  #   ports:
  #     - 80:80
  #   networks:
  #     - mern-network
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - mern-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - mern-network
networks:
  mern-network:
    driver: bridge